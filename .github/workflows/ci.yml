name: Build and Deploy
on: [push]
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    env:
      UV_LINK_MODE: copy
    steps:
      - uses: actions/checkout@v4
      - run: git fetch --prune --unshallow
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/uv-action@v2
        with:
          version: latest
      - name: Sync dependencies
        run: uv sync --dev --extra test
      - name: Check formatting
        run: uv run --frozen black --check .
      - name: Lint with Ruff
        run: uv run --frozen ruff check .
      - name: Test with pytest
        run: uv run --frozen pytest
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
  documentation:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    env:
      UV_LINK_MODE: copy
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install uv
        uses: astral-sh/uv-action@v2
        with:
          version: latest
      - name: Sync dependencies
        run: uv sync --dev
      - name: Build documentation
        run: uv run --frozen mkdocs build --strict
      - name: Deploy documentation
        uses: JamesIves/github-pages-deploy-action@4.7.3
        with:
          folder: site
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v4
      - run: git fetch --prune --unshallow
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install uv
        uses: astral-sh/uv-action@v2
        with:
          version: latest
      - name: Build distribution
        run: uv build
      - uses: actions/upload-artifact@v4
        with:
          name: release
          path: dist
          if-no-files-found: error
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  deploy:
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release
          path: dist/
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
