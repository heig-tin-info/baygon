import{_ as e,c as s,a as n,o as t}from"./app-B_wgLvVB.js";const l={};function i(c,a){return t(),s("div",null,[...a[0]||(a[0]=[n(`<h1 id="advanced" tabindex="-1"><a class="header-anchor" href="#advanced"><span>Advanced</span></a></h1><h2 id="test-on-source-files" tabindex="-1"><a class="header-anchor" href="#test-on-source-files"><span>Test on source files</span></a></h2><p>You may want to execute tests on source files. This is possible by using <code>cat</code> as executable:</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">1</span></span>
<span class="line"><span class="token key atrule">tests</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Test function foo</span>
<span class="line">    <span class="token key atrule">executable</span><span class="token punctuation">:</span> cat</span>
<span class="line">    <span class="token key atrule">stdin</span><span class="token punctuation">:</span> foo.c</span>
<span class="line">    <span class="token key atrule">stdout</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">regex</span><span class="token punctuation">:</span> void\\s+foo\\s<span class="token important">*\\(\\s*int\\s+\\w+\\)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)])])}const p=e(l,[["render",i]]),r=JSON.parse('{"path":"/guide/advanced.html","title":"Advanced","lang":"en-US","frontmatter":{},"git":{"updatedTime":1667915383000,"contributors":[{"name":"Yves Chevallier","username":"","email":"yves.chevallier@heig-vd.ch","commits":1},{"name":"yves-chevallier","username":"yves-chevallier","email":"52489316+yves-chevallier@users.noreply.github.com","commits":1,"url":"https://github.com/yves-chevallier"}],"changelog":[{"hash":"5b9e3e869d47964552a7d7614bdad2d9530a9e14","time":1667915383000,"email":"52489316+yves-chevallier@users.noreply.github.com","author":"Yves Chevallier","message":"Version 1.0alpha (#23)"},{"hash":"3d0c2faf3d6b6234e4a90de1aa1127ea90769afe","time":1603974869000,"email":"yves.chevallier@heig-vd.ch","author":"Yves Chevallier","message":"Add support for binaries on path"}]},"filePathRelative":"guide/advanced.md"}');export{p as comp,r as data};
